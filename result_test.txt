
> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t test router get


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t test router post

  console.log
    result post  Test {
      _events: [Object: null prototype] {
        end: [Function: bound onceWrapper] { listener: [Function: bound ] }
      },
      _eventsCount: 1,
      _maxListeners: undefined,
      _enableHttp2: false,
      _agent: false,
      _formData: null,
      method: 'POST',
      url: 'http://127.0.0.1:37471/api/login',
      _header: {
        'content-type': 'application/json',
        authorization: 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMDM1MTMyNGUwNTcxYjUxZTkwXCIiLCJpYXQiOjE2Njg1NDI3MjN9.-EDtDQEf0oYnSbhFDV4RG1GCSrN1Pfb4JtOln8cgmpE'
      },
      header: {
        'Content-Type': 'application/json',
        Authorization: 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMDM1MTMyNGUwNTcxYjUxZTkwXCIiLCJpYXQiOjE2Njg1NDI3MjN9.-EDtDQEf0oYnSbhFDV4RG1GCSrN1Pfb4JtOln8cgmpE'
      },
      writable: true,
      _redirects: 0,
      _maxRedirects: 0,
      cookies: '',
      qs: {},
      _query: [],
      qsRaw: [],
      _redirectList: [],
      _streamRequest: false,
      _lookup: undefined,
      _buffer: true,
      app: <ref *1> Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype] {
          request: [Function],
          connection: [Function: connectionListener]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: TCP {
          reading: false,
          onconnection: [Function: onconnection],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: false,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 902,
        [Symbol(kUniqueHeaders)]: null
      },
      _asserts: [ [Function (anonymous)] ],
      _server: <ref *1> Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype] {
          request: [Function],
          connection: [Function: connectionListener]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 0,
        _handle: TCP {
          reading: false,
          onconnection: [Function: onconnection],
          [Symbol(owner_symbol)]: [Circular *1]
        },
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: false,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6::::0',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 902,
        [Symbol(kUniqueHeaders)]: null
      },
      _data: {
        username: 'root',
        name: 'Superuser',
        title: 'Using Async/Await test',
        author: 'Robert w. D.',
        blogs: 5,
        url: 'http://www.teste-post.com',
        likes: 11,
        userId: new ObjectId("6373f10351324e0571b51e90")
      },
      [Symbol(kCapture)]: false
    }

      at Object.log (tests/blog_api_get_post.test.js:123:15)

  console.log
    result  <ref *2> Response {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      res: <ref *1> IncomingMessage {
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: true,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: true,
          dataEmitted: true,
          decoder: [StringDecoder],
          encoding: 'utf8',
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          data: [Array],
          error: [Array],
          close: [Function: bound emit]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [ClientRequest],
          [Symbol(async_id_symbol)]: 1070,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [
          'X-Powered-By',
          'Express',
          'Access-Control-Allow-Origin',
          '*',
          'Content-Type',
          'application/json; charset=utf-8',
          'Content-Length',
          '25',
          'ETag',
          'W/"19-nIoxUTr5+ybmaEhtpQWNIScZDB0"',
          'Date',
          'Tue, 15 Nov 2022 20:05:24 GMT',
          'Connection',
          'close'
        ],
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 401,
        statusMessage: 'Unauthorized',
        client: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [ClientRequest],
          [Symbol(async_id_symbol)]: 1070,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _consuming: false,
        _dumped: false,
        req: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 159,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /api/blogs HTTP/1.1\r\n' +
            'Host: 127.0.0.1:37471\r\n' +
            'Accept-Encoding: gzip, deflate\r\n' +
            'Content-Type: application/json\r\n' +
            'Authorization: bearer undefined\r\n' +
            'Content-Length: 159\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/api/blogs',
          _ended: true,
          res: [Circular *1],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: '127.0.0.1',
          protocol: 'http:',
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kEndCalled)]: true,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        text: '{"error":"invalid token"}',
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: {
          'x-powered-by': 'Express',
          'access-control-allow-origin': '*',
          'content-type': 'application/json; charset=utf-8',
          'content-length': '25',
          etag: 'W/"19-nIoxUTr5+ybmaEhtpQWNIScZDB0"',
          date: 'Tue, 15 Nov 2022 20:05:24 GMT',
          connection: 'close'
        },
        [Symbol(kHeadersCount)]: 14,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      request: Test {
        _events: [Object: null prototype] { abort: [Function (anonymous)] },
        _eventsCount: 1,
        _maxListeners: undefined,
        _enableHttp2: false,
        _agent: false,
        _formData: null,
        method: 'POST',
        url: 'http://127.0.0.1:37471/api/blogs',
        _header: {
          'content-type': 'application/json',
          authorization: 'bearer undefined'
        },
        header: {
          'Content-Type': 'application/json',
          Authorization: 'bearer undefined'
        },
        writable: true,
        _redirects: 0,
        _maxRedirects: 0,
        cookies: '',
        qs: {},
        _query: [],
        qsRaw: [],
        _redirectList: [],
        _streamRequest: false,
        _lookup: undefined,
        _buffer: true,
        app: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 0,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: false,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 902,
          [Symbol(kUniqueHeaders)]: null
        },
        _asserts: [],
        _data: {
          username: 'root',
          name: 'Superuser',
          author: 'Robert w. D.',
          blogs: 5,
          url: 'http://www.teste-prop-title.com',
          likes: 11,
          userId: '6373f10451324e0571b51e9d'
        },
        req: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 159,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'POST /api/blogs HTTP/1.1\r\n' +
            'Host: 127.0.0.1:37471\r\n' +
            'Accept-Encoding: gzip, deflate\r\n' +
            'Content-Type: application/json\r\n' +
            'Authorization: bearer undefined\r\n' +
            'Content-Length: 159\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'POST',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/api/blogs',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: '127.0.0.1',
          protocol: 'http:',
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kEndCalled)]: true,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        protocol: 'http:',
        host: '127.0.0.1:37471',
        _endCalled: true,
        _callback: [Function (anonymous)],
        _fullfilledPromise: Promise { [Circular *2] },
        res: <ref *1> IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 4,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 401,
          statusMessage: 'Unauthorized',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [ClientRequest],
          text: '{"error":"invalid token"}',
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 14,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _resBuffered: true,
        response: [Circular *2],
        called: true,
        [Symbol(kCapture)]: false
      },
      req: <ref *3> ClientRequest {
        _events: [Object: null prototype] {
          drain: [Function],
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 3,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 159,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [Circular *3],
          [Symbol(async_id_symbol)]: 1070,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: 'POST /api/blogs HTTP/1.1\r\n' +
          'Host: 127.0.0.1:37471\r\n' +
          'Accept-Encoding: gzip, deflate\r\n' +
          'Content-Type: application/json\r\n' +
          'Authorization: bearer undefined\r\n' +
          'Content-Length: 159\r\n' +
          'Connection: close\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype],
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        path: '/api/blogs',
        _ended: true,
        res: <ref *1> IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 4,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 401,
          statusMessage: 'Unauthorized',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [Circular *3],
          text: '{"error":"invalid token"}',
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 14,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: '127.0.0.1',
        protocol: 'http:',
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kEndCalled)]: true,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          host: [Array],
          'accept-encoding': [Array],
          'content-type': [Array],
          authorization: [Array],
          'content-length': [Array]
        },
        [Symbol(kUniqueHeaders)]: null
      },
      text: '{"error":"invalid token"}',
      files: undefined,
      buffered: true,
      headers: {
        'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'content-type': 'application/json; charset=utf-8',
        'content-length': '25',
        etag: 'W/"19-nIoxUTr5+ybmaEhtpQWNIScZDB0"',
        date: 'Tue, 15 Nov 2022 20:05:24 GMT',
        connection: 'close'
      },
      header: {
        'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'content-type': 'application/json; charset=utf-8',
        'content-length': '25',
        etag: 'W/"19-nIoxUTr5+ybmaEhtpQWNIScZDB0"',
        date: 'Tue, 15 Nov 2022 20:05:24 GMT',
        connection: 'close'
      },
      statusCode: 401,
      status: 401,
      statusType: 4,
      info: false,
      ok: false,
      redirect: false,
      clientError: true,
      serverError: false,
      error: Error: cannot POST /api/blogs (401)
          at Response.Object.<anonymous>.Response.toError (/home/sr/git/fullstack/part4/node_modules/superagent/src/node/response.js:110:17)
          at Response.toError [as _setStatusProperties] (/home/sr/git/fullstack/part4/node_modules/superagent/src/response-base.js:107:48)
          at new _setStatusProperties (/home/sr/git/fullstack/part4/node_modules/superagent/src/node/response.js:41:8)
          at Test.Object.<anonymous>.Request._emitResponse (/home/sr/git/fullstack/part4/node_modules/superagent/src/node/index.js:952:20)
          at _emitResponse (/home/sr/git/fullstack/part4/node_modules/superagent/src/node/index.js:1153:38)
          at IncomingMessage.fn (/home/sr/git/fullstack/part4/node_modules/superagent/src/node/parsers/json.js:19:7)
          at IncomingMessage.emit (node:events:525:35)
          at endReadableNT (node:internal/streams/readable:1358:12)
          at processTicksAndRejections (node:internal/process/task_queues:83:21) {
        status: 401,
        text: '{"error":"invalid token"}',
        method: 'POST',
        path: '/api/blogs'
      },
      created: false,
      accepted: false,
      noContent: false,
      badRequest: false,
      unauthorized: true,
      notAcceptable: false,
      forbidden: false,
      notFound: false,
      unprocessableEntity: false,
      type: 'application/json',
      charset: 'utf-8',
      links: {},
      setEncoding: [Function: bound ],
      redirects: [],
      _body: { error: 'invalid token' },
      pipe: [Function (anonymous)],
      [Symbol(kCapture)]: false
    }

      at Object.log (tests/blog_api_get_post.test.js:148:13)


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t test propId

  console.log
    token Id prop  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMWUwYTM1ZDAzYjc3NTcyZWQ1XCIiLCJpYXQiOjE2Njg1NDI3NTF9.8Iuxr5ghZ3H1QFD-P2qlUt5hnuvuxCz_WaOydJA7NXg

      at Object.log (tests/blog_api_get_post.test.js:162:13)

  console.log
    response  <ref *2> Response {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      res: <ref *1> IncomingMessage {
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: true,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: true,
          dataEmitted: true,
          decoder: [StringDecoder],
          encoding: 'utf8',
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          data: [Array],
          error: [Array],
          close: [Function: bound emit]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [ClientRequest],
          [Symbol(async_id_symbol)]: 890,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [
          'X-Powered-By',
          'Express',
          'Access-Control-Allow-Origin',
          '*',
          'Content-Type',
          'application/json; charset=utf-8',
          'Content-Length',
          '439',
          'ETag',
          'W/"1b7-z+VVMsytImxStpQlgCFuBCMrNNo"',
          'Date',
          'Tue, 15 Nov 2022 20:05:51 GMT',
          'Connection',
          'close'
        ],
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [ClientRequest],
          [Symbol(async_id_symbol)]: 890,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _consuming: false,
        _dumped: false,
        req: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: false,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 0,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'GET /api/blogs HTTP/1.1\r\n' +
            'Host: 127.0.0.1:32913\r\n' +
            'Accept-Encoding: gzip, deflate\r\n' +
            'Content-Type: application/json\r\n' +
            'Authorization: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMWUwYTM1ZDAzYjc3NTcyZWQ1XCIiLCJpYXQiOjE2Njg1NDI3NTF9.8Iuxr5ghZ3H1QFD-P2qlUt5hnuvuxCz_WaOydJA7NXg\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'GET',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/api/blogs',
          _ended: true,
          res: [Circular *1],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: '127.0.0.1',
          protocol: 'http:',
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kEndCalled)]: true,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        text: '[{"title":"HTML is easy","author":"S. M. V","blogs":2,"url":"http://www.teste.com","likes":20,"user":{"name":"Supernani","username":"nanny","id":"6373f11e0a35d03b77572ed3"},"id":"6373f11e0a35d03b77572ed9"},{"title":"Browser can execute only Javascript","author":"Albert C. D.","blogs":10,"url":"http://www.teste.com","likes":20,"user":{"name":"Superuser","username":"root","id":"6373f11e0a35d03b77572ed5"},"id":"6373f11e0a35d03b77572edb"}]',
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: {
          'x-powered-by': 'Express',
          'access-control-allow-origin': '*',
          'content-type': 'application/json; charset=utf-8',
          'content-length': '439',
          etag: 'W/"1b7-z+VVMsytImxStpQlgCFuBCMrNNo"',
          date: 'Tue, 15 Nov 2022 20:05:51 GMT',
          connection: 'close'
        },
        [Symbol(kHeadersCount)]: 14,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      request: Test {
        _events: [Object: null prototype] { abort: [Function (anonymous)] },
        _eventsCount: 1,
        _maxListeners: undefined,
        _enableHttp2: false,
        _agent: false,
        _formData: null,
        method: 'GET',
        url: 'http://127.0.0.1:32913/api/blogs',
        _header: {
          'content-type': 'application/json',
          authorization: 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMWUwYTM1ZDAzYjc3NTcyZWQ1XCIiLCJpYXQiOjE2Njg1NDI3NTF9.8Iuxr5ghZ3H1QFD-P2qlUt5hnuvuxCz_WaOydJA7NXg'
        },
        header: {
          'Content-Type': 'application/json',
          Authorization: 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMWUwYTM1ZDAzYjc3NTcyZWQ1XCIiLCJpYXQiOjE2Njg1NDI3NTF9.8Iuxr5ghZ3H1QFD-P2qlUt5hnuvuxCz_WaOydJA7NXg'
        },
        writable: true,
        _redirects: 0,
        _maxRedirects: 0,
        cookies: '',
        qs: {},
        _query: [],
        qsRaw: [],
        _redirectList: [],
        _streamRequest: false,
        _lookup: undefined,
        _buffer: true,
        app: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 0,
          _handle: null,
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: false,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 888,
          [Symbol(kUniqueHeaders)]: null
        },
        _asserts: [],
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 0,
          _handle: null,
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: false,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 888,
          [Symbol(kUniqueHeaders)]: null
        },
        req: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: false,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 0,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'GET /api/blogs HTTP/1.1\r\n' +
            'Host: 127.0.0.1:32913\r\n' +
            'Accept-Encoding: gzip, deflate\r\n' +
            'Content-Type: application/json\r\n' +
            'Authorization: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMWUwYTM1ZDAzYjc3NTcyZWQ1XCIiLCJpYXQiOjE2Njg1NDI3NTF9.8Iuxr5ghZ3H1QFD-P2qlUt5hnuvuxCz_WaOydJA7NXg\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'GET',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/api/blogs',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: '127.0.0.1',
          protocol: 'http:',
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kEndCalled)]: true,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        protocol: 'http:',
        host: '127.0.0.1:32913',
        _endCalled: true,
        _callback: [Function (anonymous)],
        _fullfilledPromise: Promise { [Circular *2] },
        res: <ref *1> IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 4,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 200,
          statusMessage: 'OK',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [ClientRequest],
          text: '[{"title":"HTML is easy","author":"S. M. V","blogs":2,"url":"http://www.teste.com","likes":20,"user":{"name":"Supernani","username":"nanny","id":"6373f11e0a35d03b77572ed3"},"id":"6373f11e0a35d03b77572ed9"},{"title":"Browser can execute only Javascript","author":"Albert C. D.","blogs":10,"url":"http://www.teste.com","likes":20,"user":{"name":"Superuser","username":"root","id":"6373f11e0a35d03b77572ed5"},"id":"6373f11e0a35d03b77572edb"}]',
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 14,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _resBuffered: true,
        response: [Circular *2],
        called: true,
        [Symbol(kCapture)]: false
      },
      req: <ref *3> ClientRequest {
        _events: [Object: null prototype] {
          drain: [Function],
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 3,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [Circular *3],
          [Symbol(async_id_symbol)]: 890,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: 'GET /api/blogs HTTP/1.1\r\n' +
          'Host: 127.0.0.1:32913\r\n' +
          'Accept-Encoding: gzip, deflate\r\n' +
          'Content-Type: application/json\r\n' +
          'Authorization: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMWUwYTM1ZDAzYjc3NTcyZWQ1XCIiLCJpYXQiOjE2Njg1NDI3NTF9.8Iuxr5ghZ3H1QFD-P2qlUt5hnuvuxCz_WaOydJA7NXg\r\n' +
          'Connection: close\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype],
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'GET',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        path: '/api/blogs',
        _ended: true,
        res: <ref *1> IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 4,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 200,
          statusMessage: 'OK',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [Circular *3],
          text: '[{"title":"HTML is easy","author":"S. M. V","blogs":2,"url":"http://www.teste.com","likes":20,"user":{"name":"Supernani","username":"nanny","id":"6373f11e0a35d03b77572ed3"},"id":"6373f11e0a35d03b77572ed9"},{"title":"Browser can execute only Javascript","author":"Albert C. D.","blogs":10,"url":"http://www.teste.com","likes":20,"user":{"name":"Superuser","username":"root","id":"6373f11e0a35d03b77572ed5"},"id":"6373f11e0a35d03b77572edb"}]',
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 14,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: '127.0.0.1',
        protocol: 'http:',
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kEndCalled)]: true,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          host: [Array],
          'accept-encoding': [Array],
          'content-type': [Array],
          authorization: [Array]
        },
        [Symbol(kUniqueHeaders)]: null
      },
      text: '[{"title":"HTML is easy","author":"S. M. V","blogs":2,"url":"http://www.teste.com","likes":20,"user":{"name":"Supernani","username":"nanny","id":"6373f11e0a35d03b77572ed3"},"id":"6373f11e0a35d03b77572ed9"},{"title":"Browser can execute only Javascript","author":"Albert C. D.","blogs":10,"url":"http://www.teste.com","likes":20,"user":{"name":"Superuser","username":"root","id":"6373f11e0a35d03b77572ed5"},"id":"6373f11e0a35d03b77572edb"}]',
      files: undefined,
      buffered: true,
      headers: {
        'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'content-type': 'application/json; charset=utf-8',
        'content-length': '439',
        etag: 'W/"1b7-z+VVMsytImxStpQlgCFuBCMrNNo"',
        date: 'Tue, 15 Nov 2022 20:05:51 GMT',
        connection: 'close'
      },
      header: {
        'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        'content-type': 'application/json; charset=utf-8',
        'content-length': '439',
        etag: 'W/"1b7-z+VVMsytImxStpQlgCFuBCMrNNo"',
        date: 'Tue, 15 Nov 2022 20:05:51 GMT',
        connection: 'close'
      },
      statusCode: 200,
      status: 200,
      statusType: 2,
      info: false,
      ok: true,
      redirect: false,
      clientError: false,
      serverError: false,
      error: false,
      created: false,
      accepted: false,
      noContent: false,
      badRequest: false,
      unauthorized: false,
      notAcceptable: false,
      forbidden: false,
      notFound: false,
      unprocessableEntity: false,
      type: 'application/json',
      charset: 'utf-8',
      links: {},
      setEncoding: [Function: bound ],
      redirects: [],
      _body: [
        {
          title: 'HTML is easy',
          author: 'S. M. V',
          blogs: 2,
          url: 'http://www.teste.com',
          likes: 20,
          user: [Object],
          id: '6373f11e0a35d03b77572ed9'
        },
        {
          title: 'Browser can execute only Javascript',
          author: 'Albert C. D.',
          blogs: 10,
          url: 'http://www.teste.com',
          likes: 20,
          user: [Object],
          id: '6373f11e0a35d03b77572edb'
        }
      ],
      pipe: [Function (anonymous)],
      [Symbol(kCapture)]: false
    }

      at Object.log (tests/blog_api_get_post.test.js:166:13)


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t test router delete

  console.log
    response delete  [
      {
        title: 'HTML is easy',
        author: 'S. M. V',
        blogs: 2,
        url: 'http://www.teste.com',
        likes: 20,
        user: {
          name: 'Supernani',
          username: 'nanny',
          id: '6373f12ce7010af2e9229d0a'
        },
        id: '6373f12ce7010af2e9229d10'
      },
      {
        title: 'Browser can execute only Javascript',
        author: 'Albert C. D.',
        blogs: 10,
        url: 'http://www.teste.com',
        likes: 20,
        user: {
          name: 'Superuser',
          username: 'root',
          id: '6373f12ce7010af2e9229d0c'
        },
        id: '6373f12ce7010af2e9229d12'
      }
    ]

      at Object.log (tests/blog_api_delete_put.test.js:87:13)

  console.log
    responseDelete  <ref *2> Response {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      res: <ref *1> IncomingMessage {
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: true,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: true,
          dataEmitted: false,
          decoder: [StringDecoder],
          encoding: 'utf8',
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          data: [Array],
          error: [Array],
          close: [Function: bound emit]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [ClientRequest],
          [Symbol(async_id_symbol)]: 381,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [
          'X-Powered-By',
          'Express',
          'Access-Control-Allow-Origin',
          '*',
          'Date',
          'Tue, 15 Nov 2022 20:06:05 GMT',
          'Connection',
          'close'
        ],
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 204,
        statusMessage: 'No Content',
        client: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [ClientRequest],
          [Symbol(async_id_symbol)]: 381,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _consuming: false,
        _dumped: false,
        req: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: false,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 37,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'DELETE /api/blogs/6373f12ce7010af2e9229d12 HTTP/1.1\r\n' +
            'Host: 127.0.0.1:35921\r\n' +
            'Accept-Encoding: gzip, deflate\r\n' +
            'Content-Type: application/json\r\n' +
            'Authorization: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMmNlNzAxMGFmMmU5MjI5ZDBjXCIiLCJpYXQiOjE2Njg1NDI3NjR9.O2G0u1P2ZfvoJHVR4kg5qL2EW6IRehWs3uUU0lCrJMA\r\n' +
            'Content-Length: 37\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'DELETE',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/api/blogs/6373f12ce7010af2e9229d12',
          _ended: true,
          res: [Circular *1],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: '127.0.0.1',
          protocol: 'http:',
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kEndCalled)]: true,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        text: '',
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: {
          'x-powered-by': 'Express',
          'access-control-allow-origin': '*',
          date: 'Tue, 15 Nov 2022 20:06:05 GMT',
          connection: 'close'
        },
        [Symbol(kHeadersCount)]: 8,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      request: Test {
        _events: [Object: null prototype] { abort: [Function (anonymous)] },
        _eventsCount: 1,
        _maxListeners: undefined,
        _enableHttp2: false,
        _agent: false,
        _formData: null,
        method: 'DELETE',
        url: 'http://127.0.0.1:35921/api/blogs/6373f12ce7010af2e9229d12',
        _header: {
          'content-type': 'application/json',
          authorization: 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMmNlNzAxMGFmMmU5MjI5ZDBjXCIiLCJpYXQiOjE2Njg1NDI3NjR9.O2G0u1P2ZfvoJHVR4kg5qL2EW6IRehWs3uUU0lCrJMA'
        },
        header: {
          'Content-Type': 'application/json',
          Authorization: 'bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMmNlNzAxMGFmMmU5MjI5ZDBjXCIiLCJpYXQiOjE2Njg1NDI3NjR9.O2G0u1P2ZfvoJHVR4kg5qL2EW6IRehWs3uUU0lCrJMA'
        },
        writable: true,
        _redirects: 0,
        _maxRedirects: 0,
        cookies: '',
        qs: {},
        _query: [],
        qsRaw: [],
        _redirectList: [],
        _streamRequest: false,
        _lookup: undefined,
        _buffer: true,
        app: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 0,
          _handle: null,
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: false,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 379,
          [Symbol(kUniqueHeaders)]: null
        },
        _asserts: [],
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 0,
          _handle: null,
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: false,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          httpAllowHalfOpen: false,
          timeout: 0,
          keepAliveTimeout: 5000,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          headersTimeout: 60000,
          requestTimeout: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 379,
          [Symbol(kUniqueHeaders)]: null
        },
        _data: { userId: '6373f12ce7010af2e9229d0c' },
        req: ClientRequest {
          _events: [Object: null prototype],
          _eventsCount: 3,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: false,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: 37,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: [Socket],
          _header: 'DELETE /api/blogs/6373f12ce7010af2e9229d12 HTTP/1.1\r\n' +
            'Host: 127.0.0.1:35921\r\n' +
            'Accept-Encoding: gzip, deflate\r\n' +
            'Content-Type: application/json\r\n' +
            'Authorization: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMmNlNzAxMGFmMmU5MjI5ZDBjXCIiLCJpYXQiOjE2Njg1NDI3NjR9.O2G0u1P2ZfvoJHVR4kg5qL2EW6IRehWs3uUU0lCrJMA\r\n' +
            'Content-Length: 37\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: [Agent],
          socketPath: undefined,
          method: 'DELETE',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/api/blogs/6373f12ce7010af2e9229d12',
          _ended: true,
          res: [IncomingMessage],
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: '127.0.0.1',
          protocol: 'http:',
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kEndCalled)]: true,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(kUniqueHeaders)]: null
        },
        protocol: 'http:',
        host: '127.0.0.1:35921',
        _endCalled: true,
        _callback: [Function (anonymous)],
        _fullfilledPromise: Promise { [Circular *2] },
        res: <ref *1> IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 4,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 204,
          statusMessage: 'No Content',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [ClientRequest],
          text: '',
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 8,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _resBuffered: true,
        response: [Circular *2],
        called: true,
        [Symbol(kCapture)]: false
      },
      req: <ref *3> ClientRequest {
        _events: [Object: null prototype] {
          drain: [Function],
          error: [Function (anonymous)],
          finish: [Function: requestOnFinish]
        },
        _eventsCount: 3,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 37,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        socket: Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          parser: null,
          _httpMessage: [Circular *3],
          [Symbol(async_id_symbol)]: 381,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        _header: 'DELETE /api/blogs/6373f12ce7010af2e9229d12 HTTP/1.1\r\n' +
          'Host: 127.0.0.1:35921\r\n' +
          'Accept-Encoding: gzip, deflate\r\n' +
          'Content-Type: application/json\r\n' +
          'Authorization: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IlwiNjM3M2YxMmNlNzAxMGFmMmU5MjI5ZDBjXCIiLCJpYXQiOjE2Njg1NDI3NjR9.O2G0u1P2ZfvoJHVR4kg5qL2EW6IRehWs3uUU0lCrJMA\r\n' +
          'Content-Length: 37\r\n' +
          'Connection: close\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: Agent {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: [Object: null prototype],
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype],
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          [Symbol(kCapture)]: false
        },
        socketPath: undefined,
        method: 'DELETE',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        path: '/api/blogs/6373f12ce7010af2e9229d12',
        _ended: true,
        res: <ref *1> IncomingMessage {
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 4,
          _maxListeners: undefined,
          socket: [Socket],
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [Array],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 204,
          statusMessage: 'No Content',
          client: [Socket],
          _consuming: false,
          _dumped: false,
          req: [Circular *3],
          text: '',
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: [Object],
          [Symbol(kHeadersCount)]: 8,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: '127.0.0.1',
        protocol: 'http:',
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kEndCalled)]: true,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          host: [Array],
          'accept-encoding': [Array],
          'content-type': [Array],
          authorization: [Array],
          'content-length': [Array]
        },
        [Symbol(kUniqueHeaders)]: null
      },
      text: '',
      files: undefined,
      buffered: true,
      headers: {
        'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        date: 'Tue, 15 Nov 2022 20:06:05 GMT',
        connection: 'close'
      },
      header: {
        'x-powered-by': 'Express',
        'access-control-allow-origin': '*',
        date: 'Tue, 15 Nov 2022 20:06:05 GMT',
        connection: 'close'
      },
      statusCode: 204,
      status: 204,
      statusType: 2,
      info: false,
      ok: true,
      redirect: false,
      clientError: false,
      serverError: false,
      error: false,
      created: false,
      accepted: false,
      noContent: true,
      badRequest: false,
      unauthorized: false,
      notAcceptable: false,
      forbidden: false,
      notFound: false,
      unprocessableEntity: false,
      type: '',
      links: {},
      setEncoding: [Function: bound ],
      redirects: [],
      pipe: [Function (anonymous)],
      [Symbol(kCapture)]: false
    }

      at Object.log (tests/blog_api_delete_put.test.js:98:13)


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t test router update


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t dummy returns one


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t test router login and users


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t Favorite Blog


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t Author up blogs


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t Most likes


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t Total likes


> aula-a@1.0.0 test
> cross-env NODE_ENV=test jest --verbose --runInBand --forceExit -t Test initially one user in db collection users

